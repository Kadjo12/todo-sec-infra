version: "3.8"

networks:
  public:
  internal:
  logs:
  monitor:

volumes:
  es_data:
  grafana_data:
  crowdsec_data:

services:
  # -------------------- Gateway --------------------
  traefik:
    image: traefik:v2.11
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --api.insecure=true
    ports:
      - "80:80"
      - "8080:8080"   # dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [public, internal, logs]
    labels:
      - "traefik.enable=true"
      # route publique -> WAF (pas directement vers l'app)
      - "traefik.http.routers.waf.rule=Host(`localhost`)"
      - "traefik.http.routers.waf.entrypoints=web"
      - "traefik.http.services.waf.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"

  # -------------------- WAF --------------------
  waf:
    image: owasp/modsecurity-crs:nginx
    # Ce conteneur écoute en 8080 et reverse-proxy vers l'app (config ci-dessous)
    volumes:
      - ./config/waf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/waf/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf:ro
      - ./config/waf/crs-setup.conf:/etc/modsecurity.d/owasp-crs/crs-setup.conf:ro
    networks: [internal, logs]
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.waf.loadbalancer.server.port=8080"
    depends_on:
      - app

  # -------------------- App métier (ex: TODO API) --------------------
  app:
    image: ghcr.io/wernight/curl:latest   # remplace par ton app; ici on simule une app sur 5000
    command: ["sh","-c","python3 -m http.server 5000"]
    networks: [internal]

  # -------------------- CrowdSec (IDS/IPS log-based) --------------------
  crowdsec:
    image: crowdsecurity/crowdsec
    environment:
      - COLLECTIONS=crowdsecurity/nginx
    volumes:
      - crowdsec_data:/var/lib/crowdsec/data
      - ./config/crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml:ro
      # monte les logs du waf/nginx et de traefik
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks: [logs]
    depends_on: [traefik, waf]

  # Bouncer Traefik (bloque IP sur décisions CrowdSec via middleware)
  traefik-bouncer:
    image: fbonalair/traefik-crowdsec-bouncer
    environment:
      - CROWDSEC_LAPI_URL=http://crowdsec:8080
      - CROWDSEC_BOUNCER_KEY=changeme
    networks: [logs, public]
    depends_on: [crowdsec]
    labels:
      - "traefik.enable=true"
      # Appliquer le middleware **si** tu veux forcer sur la route
      # - "traefik.http.routers.waf.middlewares=crowdsec@docker"

  # -------------------- SIEM : ELK --------------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks: [logs]
    ulimits:
      memlock:
        soft: -1
        hard: -1

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    volumes:
      - ./config/logstash/pipeline.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks: [logs]
    depends_on: [elasticsearch]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks: [logs]
    depends_on: [elasticsearch]

  # -------------------- Monitoring : Prometheus/Grafana/cAdvisor --------------------
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports: ["8081:8080"]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks: [monitor]

  prometheus:
    image: prom/prometheus
    networks: [monitor]
    ports: ["9090:9090"]
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana
    networks: [monitor]
    ports: ["3000:3000"]
    volumes:
      - grafana_data:/var/lib/grafana
